<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAADAV/h8AMU5PIus20gAAAABJRU5ErkJggg==
</value>
  </data>
</root>